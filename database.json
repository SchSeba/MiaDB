[{"model": "Deploy.deployplan", "pk": 1, "fields": {"name": "postgres-Cluster", "vendor": 1}}, {"model": "Deploy.deploysequence", "pk": 1, "fields": {"deployPlan": 1, "sequence": 1, "instanceType": 1}}, {"model": "Deploy.deploysequence", "pk": 2, "fields": {"deployPlan": 1, "sequence": 2, "instanceType": 2}}, {"model": "DataBase.instancetype", "pk": 1, "fields": {"name": "postgres-Master", "imageName": "postgres-9.5", "explain": "", "ansiblePlaybook": "##\r\n# Example Ansible playbook that uses the PostgreSQL module.\r\n#\r\n# This installs PostgreSQL on an Ubuntu system, creates a database called\r\n# \"myapp\" and a user called \"django\" with password \"mysupersecretpassword\"\r\n# with access to the \"myapp\" database.\r\n#\r\n---\r\n- hosts: webservers\r\n  become: yes\r\n  gather_facts: no\r\n\r\n  tasks:\r\n  - name: ensure apt cache is up to date\r\n    apt: update_cache=yes\r\n  - name: ensure packages are installed\r\n    apt: name={{item}}\r\n    with_items:\r\n        - postgresql\r\n        - libpq-dev\r\n        - python-psycopg2\r\n\r\n- hosts: webservers\r\n  become: yes\r\n  become_user: postgres\r\n  gather_facts: no\r\n\r\n  vars:\r\n    dbname: myapp\r\n    dbuser: django\r\n    dbpassword: mysupersecretpassword\r\n\r\n  tasks:\r\n  - name: ensure database is created\r\n    postgresql_db: name={{dbname}}\r\n\r\n  - name: ensure user has access to database\r\n    postgresql_user: db={{dbname}} name={{dbuser}} password={{dbpassword}} priv=ALL\r\n\r\n  - name: ensure user does not have unnecessary privilege\r\n    postgresql_user: name={{dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB\r\n  \r\n  - name: ensure no other user can access the database\r\n    postgresql_privs: db={{dbname}} role=PUBLIC type=database priv=ALL state=absent"}}, {"model": "DataBase.instancetype", "pk": 2, "fields": {"name": "postgres-Slave", "imageName": "postgres-9.5", "explain": "", "ansiblePlaybook": "##\r\n# Example Ansible playbook that uses the PostgreSQL module.\r\n#\r\n# This installs PostgreSQL on an Ubuntu system, creates a database called\r\n# \"myapp\" and a user called \"django\" with password \"mysupersecretpassword\"\r\n# with access to the \"myapp\" database.\r\n#\r\n---\r\n- hosts: webservers\r\n  become: yes\r\n  gather_facts: no\r\n\r\n  tasks:\r\n  - name: ensure apt cache is up to date\r\n    apt: update_cache=yes\r\n  - name: ensure packages are installed\r\n    apt: name={{item}}\r\n    with_items:\r\n        - postgresql\r\n        - libpq-dev\r\n        - python-psycopg2\r\n\r\n- hosts: webservers\r\n  become: yes\r\n  become_user: postgres\r\n  gather_facts: no\r\n\r\n  vars:\r\n    dbname: myapp\r\n    dbuser: django\r\n    dbpassword: mysupersecretpassword\r\n\r\n  tasks:\r\n  - name: ensure database is created\r\n    postgresql_db: name={{dbname}}\r\n\r\n  - name: ensure user has access to database\r\n    postgresql_user: db={{dbname}} name={{dbuser}} password={{dbpassword}} priv=ALL\r\n\r\n  - name: ensure user does not have unnecessary privilege\r\n    postgresql_user: name={{dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB\r\n  \r\n  - name: ensure no other user can access the database\r\n    postgresql_privs: db={{dbname}} role=PUBLIC type=database priv=ALL state=absent"}}, {"model": "DataBase.vendor", "pk": 1, "fields": {"name": "postgres"}}]